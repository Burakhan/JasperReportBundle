<?php

namespace Mesd\Jasper\ReportBundle\Controller;

use Symfony\Component\DependencyInjection\ContainerAware;
use Symfony\Component\HttpFoundation\RedirectResponse;
use Symfony\Component\HttpFoundation\Response;

/**
 * Contains actions to help with display and interface.
 * To use these actions the report bundle's routes will need to be included into the main projects route file
 */
class ReportController extends ContainerAware
{
    ///////////////
    // CONSTANTS //
    ///////////////

    const FORMAT_PDF = 'pdf';

    /////////////
    // ACTIONS //
    /////////////


    /**
     * Renders an asset from a cached report
     *
     * @param  string $asset     The image path relative to the cache folder (e.g. images/img_0_0_2.png)
     * @param  string $requestId The request id of the report the asset is attached to
     *
     * @return Response          The raw asset
     */
    public function displayCachedAssetAction($asset, $requestId) {
        $asset = $this->container->get('mesd.jasper.report.loader')->getReportLoader()->getCachedAsset($asset, $requestId);
        return new Response($asset, 200, array());
    }


    /**
     * Serves report exports 
     *
     * @param  string $requestId The request id of the report to export
     * @param  string $format    The format of the report to return
     *
     * @return Response          The exported report
     */
    public function exportCachedReportAction($requestId, $format) {
        //Get the export data
        $export = $this->container->get('mesd.jasper.report.loader')->getReportLoader()->getCachedReport($requestId, $format);

        //Create the response
        $response = new Response();

        //Set the headers
        if (self::FORMAT_PDF === $format) {
            $response->headers->set('Content-Type', 'application/pdf');
        }
        $response->headers->set('Content-Disposition', 'attachment;filename="' . $export->getUri() . '.' . $format . '"');
        $response->headers->set('Content-Transfer-Encoding', 'binary');
        $response->headers->set('Pragma', 'no-cache');
        $response->headers->set('Expires', '0');

        //Set the content of the response
        $response->setContent($export->getOutput());

        //Return the final response
        return $response;
    }
}
